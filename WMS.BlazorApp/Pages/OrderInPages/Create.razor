@page "/orderin/create"

@using Microsoft.AspNetCore.SignalR.Client
@using WMS.Shared.Models.Documents

@implements IAsyncDisposable

@inject IConfiguration Configuration

<h3>Create</h3>

<EditForm Model="orderIn" OnValidSubmit="CreateOrderIn">
    <InputText @bind-Value="orderIn.Name" placeholder="Name" />
    <InputText @bind-Value="orderIn.Number" placeholder="Number" />
    <InputDate @bind-Value="orderIn.DateTime" />
    <button type="submit">Create</button>
</EditForm>

@if (orderInId.HasValue)
{
    <p>OrderIn created with ID: @orderInId</p>
}

@code {
    private HubConnection? hubConnection;
    private OrderIn orderIn = new();
    private Guid? orderInId;

    protected override async Task OnInitializedAsync()
    {
        var webApiURL = Configuration["WebApiURL"];
        hubConnection = new HubConnectionBuilder()
            .WithUrl($"{webApiURL}/hubs/OrderInHub")
            .WithAutomaticReconnect()
            .Build();

        await hubConnection.StartAsync();
    }

    private async Task CreateOrderIn()
    {
        if (hubConnection is not null)
        {
            orderInId = await hubConnection.InvokeAsync<Guid>("CreateOrderIn", orderIn);
        }
    }

    public async ValueTask DisposeAsync()
    {
        if (hubConnection is not null)
        {
            await hubConnection.DisposeAsync();
        }
    }

    // hubConnection = new HubConnectionBuilder()
    //     .WithUrl("https://localhost:7188/hubs/OrderInHub", options =>
    //     {
    //         options.Headers.Add("Authorization", "Bearer YOUR_TOKEN_HERE"); // Replace with actual token
    //     })
    //     .WithAutomaticReconnect()
    //     .Build();
}
